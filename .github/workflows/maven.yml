name: PowerNukkitX

on: [ push,pull_request ]

jobs:
  check-files:
    name: Check repository files
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository)
    outputs:
      changed-files: ${{ steps.check-changed-files.outputs.all_changed_and_modified_files }}

    steps:
      - name: Check out repository contents
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for file changes
        id: check-changed-files
        uses: tj-actions/changed-files@v11.4

      - name: output list of changed files
        run: echo ${{ steps.check-changed-files.outputs.all_changed_and_modified_files }}

  build-server:
    name: Build PNX server
    runs-on: ubuntu-latest
    needs: check-files
    #    event为push且发生改变或push或commit第一条信息+b +u
    #    event is push and there is a change or push or commit the first message +b +u
    if: |
      (github.event_name == 'push' || 
      github.event.pull_request.head.repo.full_name != github.repository) && 
      (contains(needs.check-files.outputs.changed-files, 'src/') || 
      contains(needs.check-files.outputs.changed-files, 'scripts/') || 
      contains(needs.check-files.outputs.changed-files, '.github/workflows') || 
      (github.event_name == 'push' && 
      (contains(github.event.commits[0].message, '+b') || contains(github.event.commits[0].message, '+u'))
      ))

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: wrapper
          cache-overwrite-existing: true
          build-scan-publish: true
          build-scan-terms-of-service-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-service-agree: "yes"
          arguments: buildForGithubAction --scan

      - name: Read version
        id: read_version
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: 'build/resources/main/git.properties'
          properties: 'git.build.version'

      - name: Rename artifacts
        run: |
          cd build
          ls
          cd ../
          mv build/powernukkitx-${{ steps.read_version.outputs.git-build-version }}-all.jar build/powernukkitx-shaded.jar
          tar -vczf build/libs.tar.gz build/libs

      - name: Calculate hashes
        run: |
          cd build
          mkdir -p hash/sha256 hash/md5
          sha256sum powernukkitx-shaded.jar > hash/sha256/powernukkitx-shaded.jar.sha256
          sha256sum powernukkitx.jar > hash/sha256/powernukkitx.jar.sha256
          sha256sum libs.tar.gz > hash/sha256/libs.tar.gz.sha256
          md5sum powernukkitx-shaded.jar > hash/md5/powernukkitx-shaded.jar.md5
          md5sum powernukkitx.jar > hash/md5/powernukkitx.jar.md5
          md5sum libs.tar.gz > hash/md5/libs.tar.gz.md5

      - name: Archive PNX Core
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: PowerNukkitX-Core
          path: build/powernukkitx.jar

      - name: Archive PNX SHADED
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: PowerNukkitX-Shaded
          path: build/powernukkitx-shaded.jar

      - name: Archive PNX RUN Full
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: PowerNukkitX-Run-Full
          path: |
            build/libs
            build/powernukkitx.jar
            build/start.bat build/start.sh

      - name: Archive Libraries
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: PowerNukkitX-Libs
          path: build/libs/

      - name: Archive Hashes
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: Hashes(md5 & sha256)
          path: build/hash/

      - name: Get Short SHA
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - uses: ncipollo/release-action@v1
        name: Release new version
        if: success() && contains(github.event.commits[0].message, '+u') && github.repository == 'PowerNukkitX/PowerNukkitX' && contains(github.ref_name, 'master')
        with:
          artifacts: "build/powernukkitx.jar,build/libs.tar.gz,build/hash/sha256/powernukkitx.jar.sha256,build/hash/sha256/libs.tar.gz.sha256,build/hash/md5/powernukkitx.jar.md5,build/hash/md5/libs.tar.gz.md5"
          tag: ${{ steps.read_version.outputs.git-build-version }}
          body: ${{ steps.read_version.outputs.git-build-version }} - ${{ github.ref_name }} - ${{ steps.vars.outputs.sha_short }}
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ github.ref_name }}
          allowUpdates: true