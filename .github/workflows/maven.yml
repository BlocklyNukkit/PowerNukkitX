name: PowerNukkitX

on: [ push,pull_request ]

jobs:
  check-files:
    name: Check repository files
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository)
    outputs:
      changed-files: ${{ steps.check-changed-files.outputs.all_changed_and_modified_files }}

    steps:
      - name: Check out repository contents
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for file changes
        id: check-changed-files
        uses: tj-actions/changed-files@v11.4

      - name: output list of changed files
        run: echo ${{ steps.check-changed-files.outputs.all_changed_and_modified_files }}

  build-server:
    name: Build PNX server
    runs-on: ubuntu-latest
    needs: check-files
    #    event为push且发生改变或push或commit第一条信息+b +u
    #    event is push and there is a change or push or commit the first message +b +u
    if: (github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository) && (contains(needs.check-files.outputs.changed-files, 'src/') || contains(needs.check-files.outputs.changed-files, 'scripts/') || (github.event_name == 'push' && (contains(github.event.commits[0].message, '+b') || contains(github.event.commits[0].message, '+u'))))

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Build with Maven
        run: mvn -B package -DskipTests=false -Darguments="-Dmaven.javadoc.skip=true"

      - name: Get version
        id: getVersion
        uses: entimaniac/read-pom-version-action@1.0.0

      - name: Rename artifacts
        run: |
          cd target
          ls
          cd ../
          mv target/powernukkitx-${{ steps.getVersion.outputs.version }}-shaded.jar target/powernukkitx-shaded.jar
          mv target/powernukkitx-${{ steps.getVersion.outputs.version }}.jar target/powernukkitx.jar
          mv scripts/start.bat target/start.bat
          mv scripts/start.sh target/start.sh
          tar -vczf target/libs.tar.gz target/libs

      - name: Calculate hashes
        run: |
          cd target
          mkdir -p hash/sha256 hash/md5
          sha256sum powernukkitx-shaded.jar > hash/sha256/powernukkitx-shaded.jar.sha256
          sha256sum powernukkitx.jar > hash/sha256/powernukkitx.jar.sha256
          sha256sum libs.tar.gz > hash/sha256/libs.tar.gz.sha256
          md5sum powernukkitx-shaded.jar > hash/md5/powernukkitx-shaded.jar.md5
          md5sum powernukkitx.jar > hash/md5/powernukkitx.jar.md5
          md5sum libs.tar.gz > hash/md5/libs.tar.gz.md5

      - name: Archive PNX Core
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: PowerNukkitX-Core
          path: target/powernukkitx.jar

      - name: Archive PNX SHADED
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: PowerNukkitX-Shaded
          path: target/powernukkitx-shaded.jar

      - name: Archive PNX RUN Full
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: PowerNukkitX-Run-Full
          path: |
            target/libs
            target/powernukkitx.jar
            target/start.bat target/start.sh

      - name: Archive Libraries
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: PowerNukkitX-Libs
          path: target/libs/

      - name: Archive Hashes
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: Hashes(md5 & sha256)
          path: target/hash/

      - name: Get Short SHA
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - uses: ncipollo/release-action@v1
        name: Release new version
        if: success() && contains(github.event.commits[0].message, '+u') && github.repository == 'PowerNukkitX/PowerNukkitX' && contains(github.ref_name, 'master')
        with:
          artifacts: "target/powernukkitx.jar,target/libs.tar.gz,target/hash/sha256/powernukkitx.jar.sha256,target/hash/sha256/libs.tar.gz.sha256,target/hash/md5/powernukkitx.jar.md5,target/hash/md5/libs.tar.gz.md5"
          tag: ${{ steps.getVersion.outputs.version }}
          body: ${{ steps.getVersion.outputs.version }} - ${{ github.ref_name }} - ${{ steps.vars.outputs.sha_short }}
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ github.ref_name }}
          allowUpdates: true